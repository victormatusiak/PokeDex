security:
    enable_authenticator_manager: true
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        # web_service_user_provider:
        #   id:
        #     web_service_user_provider

        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /

        # secured_area:
        #     pattern: ^/api
        #     stateless: true
        #     provider: web_service_user_provider
        #     guard:
        #         authenticators:
        #             - jwt_auth.security.guard.jwt_guard_authenticator
        #     # activate different ways to authenticate
        #     # https://symfony.com/doc/current/security.html#firewalls-authentication

        #     # https://symfony.com/doc/current/security/impersonating_user.html
        #     # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/inventory, roles: ROLE_USER }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
